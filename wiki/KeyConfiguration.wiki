#summary Cryptographic keys configuration.
#labels Phase-Deploy,Featured

= Keys =

{{{
    <crypt:keystore id="keystore" location="classpath:keystore.jks" password="password"/>
    <crypt:privateKey id="privateKey" keystore-ref="keystore" alias="test" password="password"/>
    <crypt:publicKey id="publicKey" keystore-ref="keystore" alias="test"/>
}}}

= Keys Registry =

When working with a keystore registry, you can also register public and private key registries where the selection of the key is based on the alias the keys have in the keystore: 

{{{
    <crypt:keystore id="keystore1" location="classpath:keystore1.jks" password="password"/>
    <crypt:keystore id="keystore2" location="classpath:keystore2.jks" password="password"/>

    <crypt:keystoreRegistry id="keystoreRegistry" entries-ref="entries"/>

    <util:map id="entries">
        <entry key="keystoreOne" value-ref="keystore1"/>
        <entry key="keystoreTwo" value-ref="keystore2"/>
    </util:map>

    <crypt:privateKeyRegistryByAlias id="privateKeyRegistry" keystoreRegistry-ref="keystoreRegistry"/>
    <crypt:publicKeyRegistryByAlias id="publicKeyRegistry" keystoreRegistry-ref="keystoreRegistry"/>
}}}

The runtime selection of the appropriate key is possible by implementing the `PublicKeyChooserByAlias` and `PrivateKeyChooserByAlias` interfaces. The implementation of the public key chooser needs to return the alias, while that of the private key needs to return the alias and the password. Here is an example implementation:

{{{
public class MyPublicKeyChooserByAlias implements PublicKeyChooserByAlias {

    @Autowired
    private BusinessDao dao;
    
    private BusinessId businessId;

    public void setBusinessId(BusinessId businessId) {
        this.businessId = businessId;
    }

    public String getAlias() {
        return dao.getPublicKeyAlias(businessId);
    }
}

public class MyPrivateKeyChooserByAlias implements PrivateKeyChooserByAlias {

    @Autowired
    private BusinessDao dao;
    
    private BusinessId businessId;

    public void setBusinessId(BusinessId businessId) {
        this.businessId = businessId;
    }

    public String getAlias() {
        return dao.getPrivateKeyAlias(businessId);
    }

    public String getPassword() {
        return dao.getPrivateKeyPassword(businessId);
    }
}
}}}