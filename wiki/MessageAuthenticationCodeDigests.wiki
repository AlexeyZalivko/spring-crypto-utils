#summary Message Authentication Code digesters configuration.
#sidebar TableOfContents

<wiki:toc max_depth="1" />

= MAC (Message Authentication Code) Digester =

{{{
    <!-- this JCEKS keystore was created with:
        $ keytool -keystore keystore.jceks -genseckey -keyalg HmacSHA1 -keysize 2048 -alias hmac -storetype jceks -storepass changeit -keypass changeit
    -->
    <crypt:keystore id="keystore" location="classpath:keystore.jceks" password="changeit" type="JCEKS"/>
    <crypt:secretKey id="secretKey" keystore-ref="keystore" alias="hmac" password="changeit"/>
    <crypt:mac id="mac" secretKey-ref="secretKey" algorithm="HmacSHA1"/>
}}}

  * `HmacSHA1` is the default algorithm and can be omitted

An example implementation could be:

{{{
import com.google.code.springcryptoutils.core.mac.Mac;

public class MyMacDigester {

    @Autowired
    private Mac mac;

    public void myBusinessMethod() {
        byte[] message = "eat me!".getBytes();
        byte[] digest = mac.digest(message);
    }
}
}}}

*NB:* that the autowired `Mac` instance is a `com.google.code.springcryptoutils.core.mac.Mac`, not a `javax.security.Mac`.

= Base64 Encoded MAC Digester =

You shouldn't allow your raw bytes to wander the internets unarmed. This is why we also provide a base64 encoded version for message authentication codes.

{{{
    <!-- this JCEKS keystore was created with:
        $ keytool -keystore keystore.jceks -genseckey -keyalg HmacSHA1 -keysize 2048 -alias hmac -storetype jceks -storepass changeit -keypass changeit
    -->
    <crypt:keystore id="keystore" location="classpath:keystore.jceks" password="changeit" type="JCEKS"/>
    <crypt:secretKey id="secretKey" keystore-ref="keystore" alias="hmac" password="changeit"/>
    <crypt:b64Mac id="mac" secretKey-ref="secretKey" algorithm="HmacSHA1"/>
}}}

  * `HmacSHA1` is the default algorithm and can be omitted

An example implementation could be:

{{{
public class MyBase64EncodedMacDigester {

    @Autowired
    private Base64EncodedMac mac;

    public void myBusinessMethod() {
        String b64message = Base64.encode("eat me!");
        String b64digest = mac.digest(message);
    }
}
}}}